spring.application.name=gateway

server.error.whitelabel.enabled=false

server.port=8000
spring.jpa.hibernate.ddl-auto=update
spring.main.web-application-type=reactive
spring.cloud.gateway.discovery.locator.enabled=false
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
# spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:5173/
# spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowed-headers=*
# spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
management.endpoints.web.exposure.include=*
#logging.level.io.netty=DEBUG
#configuration

#lisiting review service
spring.cloud.gateway.routes[0].id=review-service
spring.cloud.gateway.routes[0].uri=lb://REVIEW-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/treatments/**, /api/reviews/**
# spring.cloud.gateway.routes[0].predicates[1]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[0].filters[0]=AuthFilter
spring.cloud.gateway.routes[0].filters[1]=RemoveRequestHeader=Cookie
#spring.cloud.gateway.routes[0].predicates[2]=Path=/api/treatments/**

#listing security service
spring.cloud.gateway.routes[1].id=security-service
spring.cloud.gateway.routes[1].uri=lb://SECURITY-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/auth/**, /api/reset-password/**
#spring.cloud.gateway.routes[1].predicates[1]=Method=POST
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie

#lisiting reservation service
spring.cloud.gateway.routes[2].id=reservation-service
spring.cloud.gateway.routes[2].uri=lb://RESERVATION-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/Pacijent/**
spring.cloud.gateway.routes[2].predicates[1]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[2].filters[0]=AuthFilter
spring.cloud.gateway.routes[2].filters[1]=RemoveRequestHeader=Cookie

#lisiting tit service
spring.cloud.gateway.routes[3].id=tit-service
spring.cloud.gateway.routes[3].uri=lb://TIT-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/TIT-SERVICE/doktori/**
spring.cloud.gateway.routes[3].predicates[1]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[3].filters[0]=AuthFilter
spring.cloud.gateway.routes[3].filters[1]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[3].filters[2]=RewritePath=/TIT-SERVICE/(?<segment>.*), /$\{segment}

#jwt config

jwt.secret=8b04b8db0cbadcc8efaafde118448756d7f348ecb283e6bde10fd2bbeda7779a

logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG

# Allowed origins for CORS
cors.allowedOrigins=http://localhost:5173

# Allowed headers for CORS
cors.allowedHeaders=*

# Allowed methods for CORS
cors.allowedMethods=GET,POST,PUT,DELETE
